{"version":3,"sources":["../src/FacetItem.jsx"],"names":["React","PropTypes","Badge","Input","Dropdown","classNames","STYLE_VARIANTS","FacetItem","handleInputOnChange","item","isChecked","variant","label","count","default","defaultProps","inverse","propTypes","func","isRequired","bool","shape","number","string","oneOf","Object","values"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,cAAvC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAChBC,mBADgB,QAChBA,mBADgB;AAAA,MACKC,IADL,QACKA,IADL;AAAA,MACWC,SADX,QACWA,SADX;AAAA,MACsBC,OADtB,QACsBA,OADtB;AAAA,sBAGhB,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,EAAE,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAC;AAApC,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAED,SAFX;AAGE,IAAA,QAAQ,EAAE;AAAA,aAAMF,mBAAmB,CAACC,IAAD,CAAzB;AAAA,KAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,IADF,eAOE;AAAM,IAAA,SAAS,EAAEJ,UAAU,CAAC,kBAAD,EAAqB;AAAE,oBAAcK;AAAhB,KAArB;AAA3B,KACGD,IAAI,CAACG,KADR,CAPF,EAUGH,IAAI,CAACI,KAAL,iBACC,oBAAC,KAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,EAAER,UAAU,CACnB,0CADmB,EAEnB;AAAE,mCAA6BM,OAAO,KAAKL,cAAc,CAACQ;AAA1D,KAFmB;AAFvB,KAOGL,IAAI,CAACI,KAPR,CAXJ,CAHgB;AAAA,CAAlB;;AA2BAN,SAAS,CAACQ,YAAV,GAAyB;AACvBJ,EAAAA,OAAO,EAAEL,cAAc,CAACU;AADD,CAAzB;AAIAT,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,mBAAmB,EAAEP,SAAS,CAACiB,IAAV,CAAeC,UADhB;AAEpBT,EAAAA,SAAS,EAAET,SAAS,CAACmB,IAAV,CAAeD,UAFN;AAGpBV,EAAAA,IAAI,EAAER,SAAS,CAACoB,KAAV,CAAgB;AACpBR,IAAAA,KAAK,EAAEZ,SAAS,CAACqB,MADG;AAEpBV,IAAAA,KAAK,EAAEX,SAAS,CAACsB,MAAV,CAAiBJ;AAFJ,GAAhB,EAGHA,UANiB;AAOpBR,EAAAA,OAAO,EAAEV,SAAS,CAACuB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAcpB,cAAd,CAAhB;AAPW,CAAtB;AAUA,eAAeC,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Input, Dropdown } from '@edx/paragon';\nimport classNames from 'classnames';\n\nimport { STYLE_VARIANTS } from './data/constants';\n\nconst FacetItem = ({\n  handleInputOnChange, item, isChecked, variant,\n}) => (\n  <Dropdown.Item as=\"label\" className=\"mb-0 py-3\">\n    <Input\n      type=\"checkbox\"\n      checked={isChecked}\n      onChange={() => handleInputOnChange(item)}\n      className=\"facet-item position-relative mr-2 mb-2\"\n    />\n    <span className={classNames('facet-item-label', { 'is-refined': isChecked })}>\n      {item.label}\n    </span>\n    {item.count && (\n      <Badge\n        pill\n        className={classNames(\n          'ml-2 bg-brand-primary text-brand-primary',\n          { 'bg-brand-primary--default': variant === STYLE_VARIANTS.default },\n        )}\n      >\n        {item.count}\n      </Badge>\n    )}\n  </Dropdown.Item>\n);\n\nFacetItem.defaultProps = {\n  variant: STYLE_VARIANTS.inverse,\n};\n\nFacetItem.propTypes = {\n  handleInputOnChange: PropTypes.func.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  item: PropTypes.shape({\n    count: PropTypes.number,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  variant: PropTypes.oneOf(Object.values(STYLE_VARIANTS)),\n};\n\nexport default FacetItem;\n"],"file":"FacetItem.js"}