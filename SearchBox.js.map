{"version":3,"sources":["../src/SearchBox.jsx"],"names":["React","useContext","PropTypes","classNames","SearchField","connectSearchBox","sendTrackEvent","deleteRefinementAction","setRefinementAction","SearchContext","STYLE_VARIANTS","QUERY_PARAM_FOR_PAGE","QUERY_PARAM_FOR_SEARCH_QUERY","searchText","SEARCH_EVENT_NAME_PREFIX","QUERY_SUBMITTED_EVENT","SearchBoxBase","className","defaultRefinement","variant","dispatch","trackingName","handleSubmit","searchQuery","query","handleClear","inverse","propTypes","string","oneOf","default","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { SearchField } from '@edx/paragon';\nimport { connectSearchBox } from 'react-instantsearch-dom';\n\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\n\nimport { deleteRefinementAction, setRefinementAction } from './data/actions';\nimport { SearchContext } from './SearchContext';\nimport {\n  STYLE_VARIANTS,\n  QUERY_PARAM_FOR_PAGE,\n  QUERY_PARAM_FOR_SEARCH_QUERY,\n} from './data/constants';\n\nexport const searchText = 'Search courses';\n// this prefix will be combined with one of the SearchBox props to create a full tracking event name\n// only if event name prop is provided by user. In the absence of the tracking name prop,\n// no tracking event will be sent.\nexport const SEARCH_EVENT_NAME_PREFIX = 'edx.enterprise';\nexport const QUERY_SUBMITTED_EVENT = 'catalog_search.query_submitted';\n\nexport const SearchBoxBase = ({\n  className,\n  defaultRefinement,\n  variant,\n}) => {\n  const { dispatch, trackingName } = useContext(SearchContext);\n\n  /**\n   * Handles when a search is submitted by adding the user's search\n   * query as a query parameter. Note that it must preserved any other\n   * existing query parameters must be preserved.\n   */\n  const handleSubmit = (searchQuery) => {\n    dispatch(setRefinementAction(QUERY_PARAM_FOR_SEARCH_QUERY, searchQuery));\n    dispatch(deleteRefinementAction(QUERY_PARAM_FOR_PAGE));\n    if (trackingName) {\n      sendTrackEvent(`${SEARCH_EVENT_NAME_PREFIX}.${trackingName}.${QUERY_SUBMITTED_EVENT}`, {\n        query: searchQuery,\n      });\n    }\n  };\n\n  /**\n   * Handles when a search is cleared by removing the user's search query\n   * from the query parameters.\n   */\n  const handleClear = () => {\n    dispatch(deleteRefinementAction(QUERY_PARAM_FOR_SEARCH_QUERY));\n    dispatch(deleteRefinementAction(QUERY_PARAM_FOR_PAGE));\n  };\n\n  return (\n    <div className={className}>\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label id=\"search-input-box\" className=\"fe__searchfield-input-box text-brand-primary\">\n        {searchText}\n      </label>\n      <SearchField.Advanced\n        className={classNames('fe__searchfield', {\n          'fe__searchfield--inverse': variant === STYLE_VARIANTS.inverse,\n        })}\n        value={defaultRefinement}\n        onSubmit={handleSubmit}\n        onClear={handleClear}\n      >\n        <SearchField.Input className=\"form-control-lg\" aria-labelledby=\"search-input-box\" data-hj-whitelist />\n        <SearchField.ClearButton />\n        <SearchField.SubmitButton />\n      </SearchField.Advanced>\n    </div>\n  );\n};\n\nSearchBoxBase.propTypes = {\n  defaultRefinement: PropTypes.string,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf([STYLE_VARIANTS.default, STYLE_VARIANTS.inverse]),\n};\n\nSearchBoxBase.defaultProps = {\n  className: undefined,\n  defaultRefinement: '',\n  variant: STYLE_VARIANTS.inverse,\n};\n\nexport default connectSearchBox(SearchBoxBase);\n"],"file":"SearchBox.js"}