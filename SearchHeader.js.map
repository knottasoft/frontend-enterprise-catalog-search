{"version":3,"sources":["../src/SearchHeader.jsx"],"names":["React","useContext","PropTypes","Container","Row","Col","classNames","SearchBox","SearchFilters","STYLE_VARIANTS","SearchContext","searchBoxColTestId","filtersColTestId","SearchHeader","variant","containerSize","refinementsFromQueryParams","searchQueryFromQueryParams","q","default","defaultProps","inverse","propTypes","string","oneOf"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,cAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,gBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,aAAzB;;AAEP,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACnD,oBAAuCd,UAAU,CAACS,aAAD,CAAjD;AAAA,MAAQM,0BAAR,eAAQA,0BAAR;;AAEA,MAAMC,0BAA0B,GAAGD,0BAA0B,CAACE,CAA9D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEH;AAAjB,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,GAAD;AACE,mBAAaJ,kBADf;AAEE,IAAA,SAAS,EAAEL,UAAU,CAAC,mBAAD,EAAsB;AAAE,oCAA8BQ,OAAO,KAAKL,cAAc,CAACU;AAA3D,KAAtB,CAFvB;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE;AAJN,kBAME,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,iBAAiB,EAAEF,0BAFrB;AAGE,IAAA,OAAO,EAAEH;AAHX,IANF,CADF,eAaE,oBAAC,GAAD;AACE,mBAAaF,gBADf;AAEE,IAAA,SAAS,EAAEN,UAAU,CAAC,mBAAD,EAAsB;AAAE,oCAA8BQ,OAAO,KAAKL,cAAc,CAACU;AAA3D,KAAtB,CAFvB;AAGE,IAAA,EAAE,EAAE;AAHN,kBAKE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAgC,IAAA,OAAO,EAAEL;AAAzC,IALF,CAbF,CADF,CADF,CADF;AA2BD,CAhCD;;AAkCAD,YAAY,CAACO,YAAb,GAA4B;AAC1BN,EAAAA,OAAO,EAAEL,cAAc,CAACY,OADE;AAE1BN,EAAAA,aAAa,EAAE;AAFW,CAA5B;AAKAF,YAAY,CAACS,SAAb,GAAyB;AACvBP,EAAAA,aAAa,EAAEb,SAAS,CAACqB,MADF;AAEvBT,EAAAA,OAAO,EAAEZ,SAAS,CAACsB,KAAV,CAAgB,CAACf,cAAc,CAACU,OAAhB,EAAyBV,cAAc,CAACY,OAAxC,CAAhB;AAFc,CAAzB;AAKA,eAAeR,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from '@edx/paragon';\nimport classNames from 'classnames';\n\nimport SearchBox from './SearchBox';\nimport SearchFilters from './SearchFilters';\nimport { STYLE_VARIANTS } from './data/constants';\n\nimport { SearchContext } from './SearchContext';\n\nexport const searchBoxColTestId = 'search-box-col';\nexport const filtersColTestId = 'filters-col';\n\nconst SearchHeader = ({ variant, containerSize }) => {\n  const { refinementsFromQueryParams } = useContext(SearchContext);\n\n  const searchQueryFromQueryParams = refinementsFromQueryParams.q;\n\n  return (\n    <div className=\"bg-brand-primary\">\n      <Container size={containerSize}>\n        <Row className=\"pt-4 pb-3\">\n          <Col\n            data-testid={searchBoxColTestId}\n            className={classNames('fe__searchbox-col', { 'fe__searchbox-col--default': variant === STYLE_VARIANTS.default })}\n            xs={12}\n            md={8}\n          >\n            <SearchBox\n              className=\"mb-4\"\n              defaultRefinement={searchQueryFromQueryParams}\n              variant={variant}\n            />\n          </Col>\n          <Col\n            data-testid={filtersColTestId}\n            className={classNames('fe__searchbox-col', { 'fe__searchbox-col--default': variant === STYLE_VARIANTS.default })}\n            xs={12}\n          >\n            <SearchFilters className=\"mb-3\" variant={variant} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nSearchHeader.defaultProps = {\n  variant: STYLE_VARIANTS.inverse,\n  containerSize: null,\n};\n\nSearchHeader.propTypes = {\n  containerSize: PropTypes.string,\n  variant: PropTypes.oneOf([STYLE_VARIANTS.default, STYLE_VARIANTS.inverse]),\n};\n\nexport default SearchHeader;\n"],"file":"SearchHeader.js"}