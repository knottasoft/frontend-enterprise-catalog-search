{"version":3,"sources":["../src/CurrentRefinements.jsx"],"names":["React","useContext","useMemo","useState","PropTypes","classNames","Badge","Button","connectCurrentRefinements","FontAwesomeIcon","faTimes","ClearCurrentRefinements","QUERY_PARAMS_TO_IGNORE","NUM_CURRENT_REFINEMENTS_TO_DISPLAY","STYLE_VARIANTS","useActiveRefinementsAsFlatArray","SearchContext","removeFromRefinementArray","deleteRefinementAction","CurrentRefinementsBase","items","variant","length","showAllRefinements","setShowAllRefinements","refinementsFromQueryParams","dispatch","activeRefinementsAsFlatArray","visibleActiveRefinements","slice","handleRefinementBadgeClick","item","facetName","attribute","includes","label","map","defualt","inverse","defaultProps","propTypes","arrayOf","shape","isRequired","oneOf","Object","values"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,OAAOC,uBAAP,MAAoC,2BAApC;AAEA,SACEC,sBADF,EAEEC,kCAFF,EAGEC,cAHF,QAIO,kBAJP;AAKA,SACEC,+BADF,QAEO,cAFP;AAGA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,yBAAT,EAAoCC,sBAApC,QAAkE,gBAAlE;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAwB;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5D,MAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,MAArB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,kBAAoDnB,QAAQ,CAAC,KAAD,CAA5D;AAAA;AAAA,MAAOoB,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,oBAAiDvB,UAAU,CAACe,aAAD,CAA3D;AAAA,MAAQS,0BAAR,eAAQA,0BAAR;AAAA,MAAoCC,QAApC,eAAoCA,QAApC;;AAEA,MAAMC,4BAA4B,GAAGZ,+BAA+B,CAACK,KAAD,CAApE;AAEA;AACF;AACA;AACA;;AACE,MAAMQ,wBAAwB,GAAG1B,OAAO,CACtC,YAAM;AACJ,QAAIqB,kBAAJ,EAAwB;AACtB,aAAOI,4BAAP;AACD;;AACD,WAAOA,4BAA4B,CAACE,KAA7B,CAAmC,CAAnC,EAAsChB,kCAAtC,CAAP;AACD,GANqC,EAOtC,CAACc,4BAAD,EAA+BJ,kBAA/B,CAPsC,CAAxC;AAUA;AACF;AACA;AACA;;AACE,MAAMO,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,IAAD,EAAU;AAC3C,QAAIR,kBAAkB,IAAIK,wBAAwB,CAACN,MAAzB,GAAkC,CAAlC,IAAuCT,kCAAjE,EAAqG;AACnGW,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,KAH0C,CAI3C;;;AACA,QAAMQ,SAAS,GAAGD,IAAI,CAACE,SAAvB;;AACA,QAAI,CAACrB,sBAAsB,CAACsB,QAAvB,CAAgCF,SAAhC,CAAD,IAA+CP,0BAA0B,CAACO,SAAD,CAAzE,IACDP,0BAA0B,CAACO,SAAD,CAA1B,CAAsCE,QAAtC,CAA+CH,IAAI,CAACI,KAApD,CADH,EAC+D;AAC7D,UAAIV,0BAA0B,CAACO,SAAD,CAA1B,CAAsCV,MAAtC,KAAiD,CAArD,EAAwD;AACtDI,QAAAA,QAAQ,CAACR,sBAAsB,CAACc,SAAD,CAAvB,CAAR;AACD,OAFD,MAEO;AACLN,QAAAA,QAAQ,CAACT,yBAAyB,CAACe,SAAD,EAAYD,IAAI,CAACI,KAAjB,CAA1B,CAAR;AACD;AACF;AACF,GAdD;;AAgBA,sBACE;AAAI,IAAA,SAAS,EAAC;AAAd,KACGP,wBAAwB,CAACQ,GAAzB,CAA6B,UAAAL,IAAI;AAAA,wBAChC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAqB,MAAA,GAAG,EAAEA,IAAI,CAACI;AAA/B,oBACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,kDADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,OAAO,EAAE;AAAA,eAAML,0BAA0B,CAACC,IAAD,CAAhC;AAAA;AAHX,oBAKE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAwBA,IAAI,CAACI,KAA7B,CALF,eAME,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEzB;AAAvB,MANF,eAOE;AAAM,MAAA,SAAS,EAAC;AAAhB,6BAA6CqB,IAAI,CAACI,KAAlD,CAPF,CADF,CADgC;AAAA,GAAjC,CADH,EAcG,CAACZ,kBAAD,IAAuBI,4BAA4B,CAACL,MAA7B,GAAsCT,kCAA7D,iBACC;AAAI,IAAA,SAAS,EAAC;AAAd,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAER,UAAU,CAAC,kDAAD,EAAqD;AAAE,uCAAiCgB,OAAO,KAAKP,cAAc,CAACuB;AAA9D,KAArD,CADvB;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMb,qBAAqB,CAAC,IAAD,CAA3B;AAAA;AAHX,UAKIG,4BAA4B,CAACL,MAA7B,GAAsCT,kCAL1C,eAME;AAAM,IAAA,SAAS,EAAC;AAAhB,kBAAoCc,4BAA4B,CAACL,MAAjE,aANF,CADF,CAfJ,EA0BGC,kBAAkB,iBACjB;AAAI,IAAA,SAAS,EAAC;AAAd,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAElB,UAAU,CACnB,6DADmB,EAEnB;AAAE,gDAA0CgB,OAAO,KAAKP,cAAc,CAACwB;AAAvE,KAFmB,CADvB;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMd,qBAAqB,CAAC,KAAD,CAA3B;AAAA,KALX;AAME,IAAA,OAAO,EAAC,MANV;AAOE,IAAA,IAAI,EAAC;AAPP,iBADF,CA3BJ,eAyCE,6CACE,oBAAC,uBAAD;AACE,IAAA,SAAS,EAAEnB,UAAU,CACnB,6DADmB,EAEnB;AAAE,gDAA0CgB,OAAO,KAAKP,cAAc,CAACwB;AAAvE,KAFmB,CADvB;AAKE,IAAA,OAAO,EAAC,MALV;AAME,IAAA,IAAI,EAAC;AANP,IADF,CAzCF,CADF;AAsDD,CAlGM;AAoGPnB,sBAAsB,CAACoB,YAAvB,GAAsC;AACpClB,EAAAA,OAAO,EAAEP,cAAc,CAACwB;AADY,CAAtC;AAIAnB,sBAAsB,CAACqB,SAAvB,GAAmC;AACjCpB,EAAAA,KAAK,EAAEhB,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACsC,KAAV,EAAlB,EAAqCC,UADX;AAEjCtB,EAAAA,OAAO,EAAEjB,SAAS,CAACwC,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAchC,cAAd,CAAhB;AAFwB,CAAnC;AAKA,eAAeN,yBAAyB,CAACW,sBAAD,CAAxC","sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Badge, Button } from '@edx/paragon';\nimport { connectCurrentRefinements } from 'react-instantsearch-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport ClearCurrentRefinements from './ClearCurrentRefinements';\n\nimport {\n  QUERY_PARAMS_TO_IGNORE,\n  NUM_CURRENT_REFINEMENTS_TO_DISPLAY,\n  STYLE_VARIANTS,\n} from './data/constants';\nimport {\n  useActiveRefinementsAsFlatArray,\n} from './data/hooks';\nimport { SearchContext } from './SearchContext';\nimport { removeFromRefinementArray, deleteRefinementAction } from './data/actions';\n\nexport const CurrentRefinementsBase = ({ items, variant }) => {\n  if (!items || !items.length) {\n    return null;\n  }\n\n  const [showAllRefinements, setShowAllRefinements] = useState(false);\n  const { refinementsFromQueryParams, dispatch } = useContext(SearchContext);\n\n  const activeRefinementsAsFlatArray = useActiveRefinementsAsFlatArray(items);\n\n  /**\n   * Determines the correct number of active refinements to show at any\n   * given time based on showAllRefinements.\n   */\n  const visibleActiveRefinements = useMemo(\n    () => {\n      if (showAllRefinements) {\n        return activeRefinementsAsFlatArray;\n      }\n      return activeRefinementsAsFlatArray.slice(0, NUM_CURRENT_REFINEMENTS_TO_DISPLAY);\n    },\n    [activeRefinementsAsFlatArray, showAllRefinements],\n  );\n\n  /**\n   * Removes the refinement that was clicked from the query params, which causes\n   * the search results to update.\n   */\n  const handleRefinementBadgeClick = (item) => {\n    if (showAllRefinements && visibleActiveRefinements.length - 1 <= NUM_CURRENT_REFINEMENTS_TO_DISPLAY) {\n      setShowAllRefinements(false);\n    }\n    // if the refinement is found, remove it.\n    const facetName = item.attribute;\n    if (!QUERY_PARAMS_TO_IGNORE.includes(facetName) && refinementsFromQueryParams[facetName]\n    && refinementsFromQueryParams[facetName].includes(item.label)) {\n      if (refinementsFromQueryParams[facetName].length === 1) {\n        dispatch(deleteRefinementAction(facetName));\n      } else {\n        dispatch(removeFromRefinementArray(facetName, item.label));\n      }\n    }\n  };\n\n  return (\n    <ul className=\"list-unstyled d-flex flex-wrap align-items-center mb-0\">\n      {visibleActiveRefinements.map(item => (\n        <li className=\"mr-2\" key={item.label}>\n          <Badge\n            className=\"fe__refinement-badge py-2 mb-2 font-weight-light\"\n            variant=\"light\"\n            onClick={() => handleRefinementBadgeClick(item)}\n          >\n            <span className=\"mr-2\">{item.label}</span>\n            <FontAwesomeIcon icon={faTimes} />\n            <span className=\"sr-only\">Remove the filter {item.label}</span>\n          </Badge>\n        </li>\n      ))}\n      {!showAllRefinements && activeRefinementsAsFlatArray.length > NUM_CURRENT_REFINEMENTS_TO_DISPLAY && (\n        <li className=\"mr-2\">\n          <Badge\n            className={classNames('fe__refinement-badge mb-2 py-2 font-weight-light', { 'fe__refinement-badge--default': variant === STYLE_VARIANTS.defualt })}\n            variant=\"light\"\n            onClick={() => setShowAllRefinements(true)}\n          >\n            +{activeRefinementsAsFlatArray.length - NUM_CURRENT_REFINEMENTS_TO_DISPLAY}\n            <span className=\"sr-only\">Show all {activeRefinementsAsFlatArray.length} filters</span>\n          </Badge>\n        </li>\n      )}\n      {showAllRefinements && (\n        <li className=\"mr-2\">\n          <Button\n            className={classNames(\n              'fe__current-refinement-button text-underline px-1 py-0 mb-2',\n              { 'fe__current-refinement-button--inverse': variant === STYLE_VARIANTS.inverse },\n            )}\n            onClick={() => setShowAllRefinements(false)}\n            variant=\"link\"\n            size=\"inline\"\n          >\n            show less\n          </Button>\n        </li>\n      )}\n      <li>\n        <ClearCurrentRefinements\n          className={classNames(\n            'fe__current-refinement-button text-underline px-1 py-0 mb-2',\n            { 'fe__current-refinement-button--inverse': variant === STYLE_VARIANTS.inverse },\n          )}\n          variant=\"link\"\n          size=\"inline\"\n        />\n      </li>\n    </ul>\n  );\n};\n\nCurrentRefinementsBase.defaultProps = {\n  variant: STYLE_VARIANTS.inverse,\n};\n\nCurrentRefinementsBase.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  variant: PropTypes.oneOf(Object.values(STYLE_VARIANTS)),\n};\n\nexport default connectCurrentRefinements(CurrentRefinementsBase);\n"],"file":"CurrentRefinements.js"}