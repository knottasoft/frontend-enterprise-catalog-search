{"version":3,"sources":["../src/SearchPagination.jsx"],"names":["React","useContext","useMemo","PropTypes","connectPagination","FontAwesomeIcon","faAngleLeft","faAngleRight","Pagination","SearchContext","setRefinementAction","deleteRefinementAction","SearchPaginationBase","nbPages","currentRefinement","maxPagesDisplayed","dispatch","icons","left","right","buttonLabels","previous","next","page","currentPage","pageOfCount","handlePageSelect","leftIcon","rightIcon","propTypes","number","isRequired","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,mCAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,gBAA5D;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAI9B;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADJC,iBACI,QADJA,iBACI;;AACJ,oBAAqBd,UAAU,CAACQ,aAAD,CAA/B;AAAA,MAAQO,QAAR,eAAQA,QAAR;;AAEA,MAAMC,KAAK,GAAGf,OAAO,CACnB;AAAA,WAAO;AACLgB,MAAAA,IAAI,eACF,uDACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEZ;AAAvB,QADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf,yBAFF,CAFG;AAOLa,MAAAA,KAAK,eACH,uDACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEZ;AAAvB,QADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf,0BAFF;AARG,KAAP;AAAA,GADmB,EAenB,EAfmB,CAArB;AAkBA,MAAMa,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,IAAI,EAAE,MAHa;AAInBC,IAAAA,WAAW,EAAE,cAJM;AAKnBC,IAAAA,WAAW,EAAE;AALM,GAArB;;AAQA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,IAAD,EAAU;AACjC,QAAIA,IAAI,GAAG,CAAX,EAAc;AACZP,MAAAA,QAAQ,CAACN,mBAAmB,CAAC,MAAD,EAASa,IAAT,CAApB,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAACL,sBAAsB,CAAC,MAAD,CAAvB,CAAR;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,UAAD;AACE,IAAA,eAAe,EAAC,2BADlB;AAEE,IAAA,SAAS,EAAEE,OAFb;AAGE,IAAA,WAAW,EAAEC,iBAHf;AAIE,IAAA,YAAY,EAAEY,gBAJhB;AAKE,IAAA,iBAAiB,EAAEX,iBALrB;AAME,IAAA,YAAY,EAAEK,YANhB;AAOE,IAAA,KAAK,EAAE;AACLO,MAAAA,QAAQ,EAAEV,KAAK,CAACC,IADX;AAELU,MAAAA,SAAS,EAAEX,KAAK,CAACE;AAFZ;AAPT,IADF;AAcD,CAvDM;AAyDPP,oBAAoB,CAACiB,SAArB,GAAiC;AAC/BhB,EAAAA,OAAO,EAAEV,SAAS,CAAC2B,MAAV,CAAiBC,UADK;AAE/BjB,EAAAA,iBAAiB,EAAEX,SAAS,CAAC2B,MAFE;AAG/Bf,EAAAA,iBAAiB,EAAEZ,SAAS,CAAC2B;AAHE,CAAjC;AAMAlB,oBAAoB,CAACoB,YAArB,GAAoC;AAClClB,EAAAA,iBAAiB,EAAE,CADe;AAElCC,EAAAA,iBAAiB,EAAE;AAFe,CAApC;AAKA,eAAeX,iBAAiB,CAACQ,oBAAD,CAAhC","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connectPagination } from 'react-instantsearch-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { Pagination } from '@edx/paragon';\n\nimport { SearchContext } from './SearchContext';\nimport { setRefinementAction, deleteRefinementAction } from './data/actions';\n\nexport const SearchPaginationBase = ({\n  nbPages,\n  currentRefinement,\n  maxPagesDisplayed,\n}) => {\n  const { dispatch } = useContext(SearchContext);\n\n  const icons = useMemo(\n    () => ({\n      left: (\n        <>\n          <FontAwesomeIcon icon={faAngleLeft} />\n          <div className=\"sr-only\">Navigate Left</div>\n        </>\n      ),\n      right: (\n        <>\n          <FontAwesomeIcon icon={faAngleRight} />\n          <div className=\"sr-only\">Navigate Right</div>\n        </>\n      ),\n    }),\n    [],\n  );\n\n  const buttonLabels = {\n    previous: '',\n    next: '',\n    page: 'Page',\n    currentPage: 'Current Page',\n    pageOfCount: 'of',\n  };\n\n  const handlePageSelect = (page) => {\n    if (page > 1) {\n      dispatch(setRefinementAction('page', page));\n    } else {\n      dispatch(deleteRefinementAction('page'));\n    }\n  };\n\n  return (\n    <Pagination\n      paginationLabel=\"search results navigation\"\n      pageCount={nbPages}\n      currentPage={currentRefinement}\n      onPageSelect={handlePageSelect}\n      maxPagesDisplayed={maxPagesDisplayed}\n      buttonLabels={buttonLabels}\n      icons={{\n        leftIcon: icons.left,\n        rightIcon: icons.right,\n      }}\n    />\n  );\n};\n\nSearchPaginationBase.propTypes = {\n  nbPages: PropTypes.number.isRequired,\n  currentRefinement: PropTypes.number,\n  maxPagesDisplayed: PropTypes.number,\n};\n\nSearchPaginationBase.defaultProps = {\n  currentRefinement: 1,\n  maxPagesDisplayed: 7,\n};\n\nexport default connectPagination(SearchPaginationBase);\n"],"file":"SearchPagination.js"}